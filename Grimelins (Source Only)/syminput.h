/*! ====================================================================================================================
  @file syminput.h

  Project Grimelins

  @author Maximilian Manndorff <max@lo3.com>
  @date Feb.03.2012

  @brief 
    Input Symbols

                        * Copyright 2012, DigiPen Institute of Technology, All Rights Reserved *
===================================================================================================================== */

///////////////////////// WINDOWS INPUT ///////////////////////
// Common Virtual Keys
DECLARE_SYMBOL(INPUT_KB_ESC)            DECLARE_SYMBOL(INPUT_KB_TILDE)            DECLARE_SYMBOL(INPUT_KB_TAB)
DECLARE_SYMBOL(INPUT_KB_CAPS)           DECLARE_SYMBOL(INPUT_KB_SHIFT)            DECLARE_SYMBOL(INPUT_KB_CONTROL)
DECLARE_SYMBOL(INPUT_KB_ALT)            DECLARE_SYMBOL(INPUT_KB_SPACE)            DECLARE_SYMBOL(INPUT_KB_ALT_R)
DECLARE_SYMBOL(INPUT_KB_UP)             DECLARE_SYMBOL(INPUT_KB_DOWN)             DECLARE_SYMBOL(INPUT_KB_LEFT)
DECLARE_SYMBOL(INPUT_KB_RIGHT)          DECLARE_SYMBOL(INPUT_KB_SHIFT_R)          DECLARE_SYMBOL(INPUT_KB_ENTER)
DECLARE_SYMBOL(INPUT_KB_BACKSLASH)      DECLARE_SYMBOL(INPUT_KB_BACKSPACE)

// Character Keys
DECLARE_SYMBOL(INPUT_KB_Q)              DECLARE_SYMBOL(INPUT_KB_W)                DECLARE_SYMBOL(INPUT_KB_E)
DECLARE_SYMBOL(INPUT_KB_R)              DECLARE_SYMBOL(INPUT_KB_T)                DECLARE_SYMBOL(INPUT_KB_Y)
DECLARE_SYMBOL(INPUT_KB_U)              DECLARE_SYMBOL(INPUT_KB_I)                DECLARE_SYMBOL(INPUT_KB_O)
DECLARE_SYMBOL(INPUT_KB_P)              DECLARE_SYMBOL(INPUT_KB_A)                DECLARE_SYMBOL(INPUT_KB_S)
DECLARE_SYMBOL(INPUT_KB_D)              DECLARE_SYMBOL(INPUT_KB_F)                DECLARE_SYMBOL(INPUT_KB_G)
DECLARE_SYMBOL(INPUT_KB_H)              DECLARE_SYMBOL(INPUT_KB_J)                DECLARE_SYMBOL(INPUT_KB_K)
DECLARE_SYMBOL(INPUT_KB_L)              DECLARE_SYMBOL(INPUT_KB_Z)                DECLARE_SYMBOL(INPUT_KB_X)
DECLARE_SYMBOL(INPUT_KB_C)              DECLARE_SYMBOL(INPUT_KB_V)                DECLARE_SYMBOL(INPUT_KB_B)
DECLARE_SYMBOL(INPUT_KB_N)              DECLARE_SYMBOL(INPUT_KB_M)

// Function Keys
DECLARE_SYMBOL(INPUT_KB_F1)             DECLARE_SYMBOL(INPUT_KB_F2)               DECLARE_SYMBOL(INPUT_KB_F3)
DECLARE_SYMBOL(INPUT_KB_F4)             DECLARE_SYMBOL(INPUT_KB_F5)               DECLARE_SYMBOL(INPUT_KB_F6)
DECLARE_SYMBOL(INPUT_KB_F7)             DECLARE_SYMBOL(INPUT_KB_F8)               DECLARE_SYMBOL(INPUT_KB_F9)
DECLARE_SYMBOL(INPUT_KB_F10)            DECLARE_SYMBOL(INPUT_KB_F11)              DECLARE_SYMBOL(INPUT_KB_F12)

// Number Row
DECLARE_SYMBOL(INPUT_KB_1)              DECLARE_SYMBOL(INPUT_KB_2)                DECLARE_SYMBOL(INPUT_KB_3)
DECLARE_SYMBOL(INPUT_KB_4)              DECLARE_SYMBOL(INPUT_KB_5)                DECLARE_SYMBOL(INPUT_KB_6)
DECLARE_SYMBOL(INPUT_KB_7)              DECLARE_SYMBOL(INPUT_KB_8)                DECLARE_SYMBOL(INPUT_KB_9)
DECLARE_SYMBOL(INPUT_KB_0)

// Number Block
DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_LOCK)          DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_DIV)
DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_ASTERIX)       DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_MINUS)
DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_PLUS)          DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_ENTER)
DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_DOT)           DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_1)
DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_2)             DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_3)
DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_4)             DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_5)
DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_6)             DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_7)
DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_8)             DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_9)
DECLARE_SYMBOL(INPUT_KB_NUMBLOCK_0)

// Special Blocks
DECLARE_SYMBOL(INPUT_KB_PRINT_SCREEN)     DECLARE_SYMBOL(INPUT_KB_SCROLL_LOCK)       DECLARE_SYMBOL(INPUT_KB_PAUSE)
DECLARE_SYMBOL(INPUT_KB_INSERT)           DECLARE_SYMBOL(INPUT_KB_DELETE)            DECLARE_SYMBOL(INPUT_KB_HOME)
DECLARE_SYMBOL(INPUT_KB_END)              DECLARE_SYMBOL(INPUT_KB_PAGE_UP)           DECLARE_SYMBOL(INPUT_KB_PAGE_DOWN)


////////////////////// WINDOWS MOUSE //////////////////////
DECLARE_SYMBOL(INPUT_MS_LBUTTON)        DECLARE_SYMBOL(INPUT_MS_RBUTTON)        DECLARE_SYMBOL(INPUT_MS_MBUTTON)
DECLARE_SYMBOL(INPUT_MS_FBUTTON)        DECLARE_SYMBOL(INPUT_MS_BBUTTON)        DECLARE_SYMBOL(INPUT_MS_MOVE_X)
DECLARE_SYMBOL(INPUT_MS_MOVE_Y)         DECLARE_SYMBOL(INPUT_MS_MOVE_XY)        DECLARE_SYMBOL(INPUT_MS_WHEEL)


////////////////////// XBOX Gamepad //////////////////////
DECLARE_SYMBOL(INPUT_CTRL_DPAD_UP)                  DECLARE_SYMBOL(INPUT_CTRL_DPAD_DOWN)            
DECLARE_SYMBOL(INPUT_CTRL_DPAD_LEFT)                DECLARE_SYMBOL(INPUT_CTRL_DPAD_RIGHT)
DECLARE_SYMBOL(INPUT_CTRL_START)                    DECLARE_SYMBOL(INPUT_CTRL_BACK)
DECLARE_SYMBOL(INPUT_CTRL_THUMB_LEFT)               DECLARE_SYMBOL(INPUT_CTRL_THUMB_RIGHT)
DECLARE_SYMBOL(INPUT_CTRL_SHOULDER_LEFT)            DECLARE_SYMBOL(INPUT_CTRL_SHOULDER_RIGHT)
DECLARE_SYMBOL(INPUT_CTRL_A)                        DECLARE_SYMBOL(INPUT_CTRL_B)
DECLARE_SYMBOL(INPUT_CTRL_X)                        DECLARE_SYMBOL(INPUT_CTRL_Y)
DECLARE_SYMBOL(INPUT_CTRL_TRIGGER_LEFT)             DECLARE_SYMBOL(INPUT_CTRL_TRIGGER_RIGHT)
DECLARE_SYMBOL(INPUT_CTRL_STICK_LEFT)               DECLARE_SYMBOL(INPUT_CTRL_STICK_RIGHT)
DECLARE_SYMBOL(INPUT_STICK_LEFT_FORWARD)            DECLARE_SYMBOL(INPUT_STICK_LEFT_BACKWARD)
DECLARE_SYMBOL(INPUT_STICK_LEFT_LEFT)               DECLARE_SYMBOL(INPUT_STICK_LEFT_RIGHT)

   